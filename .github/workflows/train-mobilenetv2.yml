name: Train Mobilenet V2

on:
  push:
    branches:
      [train]

jobs:
  
  train:
    runs-on: ubuntu-latest
    container: 
      image: nclgbd/asltrain:develop
    steps:
    - uses: actions/checkout@v2
    - uses: iterative/setup-dvc@v1
    - name: Build env
      run: |
        mkdir -p /workdir/media/ /workdir/incorrect_images/ /workdir/saved_models/
        # get zip file from google doc
        wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1QZj_E8ixxh4n2Bv4AcSCcFayNejeBQV0' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1QZj_E8ixxh4n2Bv4AcSCcFayNejeBQV0" -O temp_data.zip && rm -rf /tmp/cookies.txt
        zip -FFv temp_data.zip --out data.zip
        unzip -f data.zip
        rm -f data.zip

    - name: Train model
      id: train_mobilenetv2
      shell: bash -l {0}
      run: |
        ls -a
        conda activate torch_base
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        python -m pytorch_vision_utils.train --model_name "mobilenetv2" --parameters_path "parameters.json" --debug "False"
    # Moving artifacts
    - name: Move artifacts
      run: |
        mv media/ artifacts/
        mv saved_models/mobilenetv2.pth artifacts/
        mv incorrect_images/ artifacts
    # Save artifacts 
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mobilenetv2_${{ steps.train_mobilenetv2.outputs.sha_short }}
        path: artifacts/
